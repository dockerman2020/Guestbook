---
kind: secret
name: docker_username
get:
  path: docker
  name: username
---
kind: secret
name: docker_password
get:
  path: docker
  name: password
---
kind: secret
name: k8s_crt
get:
  path: k8s
  name: ca_crt
---
kind: secret
name: k8s_server
get:
  path: k8s
  name: server
---
kind: secret
name: k8s_token
get:
  path: k8s
  name: token

---
kind: pipeline
type: kubernetes
name: build

steps:
  - name: Build docker image
    image: plugins/docker
    settings:
      repo: dockerman2002/guestbook-demo
      dockerfile: guestbook/php-redis/Dockerfile
      context: guestbook/php-redis
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - latest
        - ${DRONE_COMMIT_SHA}
    when:
      event:
      - push
      - pull_request
      - custom

  - name: Scan demo guest book Image
    #image: aquasec/trivy:0.32.0
    image: dockerman2002/trivy-client:v0.0.16
    commands:
    - "trivy image \
      --token $ttoken \
      --ignore-unfixed \
      --server $tserver \
      --security-checks vuln \
      --severity MEDIUM,HIGH,CRITICAL \
      dockerman2002/guestbook-demo:${DRONE_COMMIT_SHA} \
      -f json 
      -o /drone/src/scan_results.out"
      
    - "
      VULNFOUND=`/bin/grep Vulnerabilities /drone/src/scan_results.out`
      [ ! -z $VULNFOUND ] && /bin/cat /drone/src/scan_results.out |\
      /usr/bin/jq '.Results[0] .Vulnerabilities[] |
      {VulnerabilityID: .VulnerabilityID, PkgName: .PkgName, InstalledVersion: .InstalledVersion, 
      FixedVersion: .FixedVersion, Severity: .Severity, PrimaryURL: .PrimaryURL,
      Title: .Title, PublishedDate: .PublishedDate, LastModifiedDate: .LastModifiedDate}' \
      || echo \"WHOOO HOOO! Clean image built!. |tee /drone/src/slack_msg.txt \"
      "
    # - echo $DRONE_STEP_NAME
    # - echo $DRONE_STEP_NUMBER
    # - echo DRONE_BUILD_STATUS:$DRONE_BUILD_STATUS
    # - echo DRONE_STAGE_STATUS:$DRONE_STAGE_STATUS
    # - echo DRONE_JOB_STATUS:$DRONE_JOB_STATUS
    # - echo CI_BUILD_STATUS:$CI_BUILD_STATUS
    # - echo CI_JOB_STATUS:$CI_JOB_STATUS
    # - echo BUILD_STATUS:$BUILD_STATUS
    # - echo BUILD_STATUS_2:$BUILD_STATUS_2
    # - echo BUILD_STATUS_3:$BUILD_STATUS_3
    # - echo BUILD_STATUS_4:$BUILD_STATUS_4
    # - echo BUILD_STATUS_5:$BUILD_STATUS_5
    # - echo BUILD_STATUS_6:$BUILD_STATUS_6
    # - echo $DRONE_STEP_NAME_1
    # - echo $DRONE_STEP_NUMBER
    environment:
      ca:
        from_secret: k8s_crt
      server:
        from_secret: k8s_server
      token:
        from_secret: k8s_token
      ttoken:
        from_secret: trivy_token
      tserver:
        from_secret: trivy_server
      # BUILD_STARTED: ${DRONE_BUILD_CREATED}
      # BUILD_URL: "${DRONE_BUILD_LINK}"
      # BUILD_BRANCH: ${DRONE_COMMIT_BRANCH}
      # BUILD_COMMIT: ${DRONE_COMMIT}
      # BUILD_AUTHOR: ${DRONE_COMMIT_AUTHOR_NAME}
      # BUILD_STATUS: ${DRONE_BUILD_STATUS}
      # BUILD_STATUS_2: ${DRONE_STAGE_STATUS}
      # BUILD_STATUS_3: ${DRONE_JOB_STATUS}
      # BUILD_STATUS_4: ${CI_BUILD_STATUS}
      # BUILD_STATUS_5: ${CI_JOB_STATUS}
      # DRONE_STEP_NUMBER: ${DRONE_STEP_NUMBER}
      # REPO_NAME: ${DRONE_REPO}
      # REPO_COMMIT_URL: ${DRONE_COMMIT_LINK}
      # REPO_URL: ${DRONE_REPO_LINK}

  - name: Build Status Nofification
    image: plugins/slack
    settings:
      token:
        from_secret: drone_slack_token
      webhook:
        from_secret: slack_webhook
      channel: k8s
      alt_text: "cute cat"
      image_url: "https://media.giphy.com/media/26tPjmWwr36k1OkYE/giphy.gif"
      # image_url: "https://media.giphy.com/media/xT5LMHxhOfscxPfIfm/giphy.gif"
      icon_url: https://unsplash.it/256/256/?random
      link_names: "true"
      template: >
        {{#failure build.status}} :x: :rotating_light: :fire_engine: :ambulance: {{/failure}} {{ uppercasefirst build.status }}: Build #{{ build.number }} * (type: `{{ build.event }}`)
        Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>
        Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>
        Author: {{ build.author }}      
        Build: {{ build.link }}| Drone Build {{ build.number }} Failed :ghost: 
      # template: >
      #   {{#success build.status}}
      #   image_url: "https://media.giphy.com/media/xT5LMHxhOfscxPfIfm/giphy.gif"
      #   alt_text: "cute cat"
      #   build {{build.number}} succeeded.
      #   {{/success}}
    when:
      status:
      - failure 

  - name: Build Status Nofification success
    image: plugins/slack
    settings:
      token:
        from_secret: drone_slack_token
      webhook:
        from_secret: slack_webhook
      channel: k8s
      alt_text: "cute cat"
      # image_url: "https://media.giphy.com/media/26tPjmWwr36k1OkYE/giphy.gif"
      image_url: "https://media.giphy.com/media/xT5LMHxhOfscxPfIfm/giphy.gif"
      icon_url: https://unsplash.it/256/256/?random
      link_names: "true"
      template: file:///drone/src/slack_msg.txt 
        # {{#success build.status}} {{ else }} :x: :rotating_light: :fire_engine: :ambulance: {{/success}} {{ uppercasefirst build.status }}: Build #{{ build.number }} * (type: `{{ build.event }}`)
        # Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>
        # Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>
        # Author: {{ build.author }}
        # file:///drone/src/slack_msg.txt      
        # Build: {{ build.link }}| Drone Build {{ build.number }} Sucessful :mag: :package: :tada:
    when:
      status: 
      - success

---
kind: pipeline
type: kubernetes
name: deploy

steps:
  - name: Deploy redis follower service
    image: danielgormly/drone-plugin-kube:0.2.0
    settings:
      template: guestbook/redis-follower-service.yaml
      namespace: guestbook-demo
      ca:
        from_secret: k8s_crt
      server:
        from_secret: k8s_server
      token:
        from_secret: k8s_token

  - name: Deploy demo guest book redis follower deployment
    image: danielgormly/drone-plugin-kube:0.2.0
    settings:
      template: guestbook/redis-follower-deployment.yaml
      namespace: guestbook-demo
      ca:
        from_secret: k8s_crt
      server:
        from_secret: k8s_server
      token:
        from_secret: k8s_token

  - name: Deploy redis leader service
    image: danielgormly/drone-plugin-kube:0.2.0
    settings:
      template: guestbook/redis-leader-service.yaml
      namespace: guestbook-demo
      ca:
        from_secret: k8s_crt
      server:
        from_secret: k8s_server
      token:
        from_secret: k8s_token

  - name: Deploy demo guest book redis leader deployment
    image: danielgormly/drone-plugin-kube:0.2.0
    settings:
      template: guestbook/redis-leader-deployment.yaml
      namespace: guestbook-demo
      ca:
        from_secret: k8s_crt
      server:
        from_secret: k8s_server
      token:
        from_secret: k8s_token

  - name: Deploy frontend service
    image: danielgormly/drone-plugin-kube:0.2.0
    settings:
      template: guestbook/frontend-service.yaml
      namespace: guestbook-demo
      ca:
        from_secret: k8s_crt
      server:
        from_secret: k8s_server
      token:
        from_secret: k8s_token

  - name: Deploy frontend deployment
    image: danielgormly/drone-plugin-kube:0.2.0
    settings:
      image_tag: ${DRONE_TAG}
      template: guestbook/frontend-deployment.yaml
      namespace: guestbook-demo
      ca:
        from_secret: k8s_crt
      server:
        from_secret: k8s_server
      token:
        from_secret: k8s_token